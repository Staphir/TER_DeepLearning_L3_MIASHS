N = # Nombre d'itération souhaitée

X = [] # stockage des matrices
y = [] # stockage des mouvements

pour i de 1 à N :

    cube = mycube() # générer un nouvel objet cube avec 6 faces de 3x3 cellules

    # mélanger l'état du cube 10 fois et récupérer le chemin de mélange
    chemin_vers_état_mélangé = cube.mélanger( 10 ) 
    
    # obtenir le chemin à effectuer depuis l'état mélangé
    chemin_vers_resolution = cube.inverser_chemin( chemin_vers_état_mélangé )

    pour chaque mouvement dans chemin_vers_resolution :

        # récupérer l'état actuel de la matrice du cube
        grille = cube.grille()

        # stocker les données dans 2 listes différentes 
        # où ces données se situront au même indice
        X.ajouter( grille )
        y.ajouter( mouvement )
        
        # générer l'état suivant du cube
        cube.appliquer_mouvement( mouvement )

fin pour 